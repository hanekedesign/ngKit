{"version":3,"file":"ngkit.umd.js.map","sources":["ng://ngkit/config.ts","ng://ngkit/services/event.ts","ng://ngkit/services/storage.ts","ng://ngkit/services/token.ts","ng://ngkit/services/http.ts","ng://ngkit/models/cache-item.ts","ng://ngkit/models/model.ts","ng://ngkit/models/policy.ts","ng://ngkit/models/user.ts","ng://ngkit/services/authorization.ts","ng://ngkit/services/authentication.ts",null,"ng://ngkit/services/social-authentication.ts","ng://ngkit/services/cache.ts","ng://ngkit/guards/auth-guard.ts","ng://ngkit/guards/auth-resolve-guard.ts","ng://ngkit/services/http-interceptor.ts","ng://ngkit/services/http-auth-interceptor.ts","ng://ngkit/providers.ts","ng://ngkit/ngkit.module.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class Config {\n    /**\n     * Default configuration.\n     */\n    static defaultOptions: any = {\n        /**\n         * Authentication settings.\n         */\n        authentication: {\n            /**\n             * Common endpoints for authentication sercice.\n             */\n            endpoints: {\n                check: '',\n                forogotPassword: '',\n                getUser: '',\n                login: '',\n                logout: '',\n                register: '',\n                resetPassword: '',\n                socialAuth: ''\n            },\n            /**\n             * Methods used for authentication.\n             */\n            method: {\n                token: true\n            },\n            /**\n             * Social provider configuration.\n             */\n            social: {\n                facebook: {\n                    id: '',\n                    version: 'v2.6',\n                    xfbml: true,\n                    scope: 'public_profile,email'\n                },\n                twitter: {\n                    id: ''\n                },\n                redirectTo: '',\n                oauthProxy: ''\n            }\n        },\n        /**\n         * Authorization options.\n         */\n        authorization: {},\n        /**\n         * Http options.\n         */\n        http: {\n            /**\n             * Based url for http requests.\n             */\n            baseUrl: '',\n            /**\n             * Default headers for http request.\n             */\n            headers: {}\n        },\n        /**\n         * Storage Options\n         */\n        storage: {\n            name: 'ngkitStorage'\n        },\n        /**\n         * Token options.\n         */\n        token: {\n            /**\n             * Default name of authorization token read from responses.\n             */\n            readAs: 'token',\n            /**\n             * Default name of authorization token that is stored.\n             */\n            storeAs: '_token',\n            /**\n             * Scheme to use in Authorization header along with token.\n             */\n            scheme: 'Bearer'\n        },\n        /**\n         * Cache service options.\n         */\n        cache: {\n            /**\n             * Default expiration time in minutes.\n             */\n            expires: 5\n        },\n        /**\n         * Enable debug mode.\n         */\n        debug: false\n    }\n\n    /**\n     * Config options.\n     */\n    options: any;\n\n    /**\n     * Create a new instance of the service..\n     */\n    constructor(@Inject('ngKitOptions') private _options: any) {\n        this.options = Config.defaultOptions;\n        this.setOptions(this._options);\n    }\n\n    /**\n     * Return the configurable options.\n     */\n    getOptions(): any { return this.options; }\n\n    /**\n     * Get an option by key.\n     *\n     * @param   key\n     * @param   override\n     */\n    get(key: string, override: any = false): any {\n        return Config.getItem(key, override)\n    }\n\n    /**\n     * Static method to get an option by key.\n     *\n     * @param   key\n     * @param   override\n     */\n    static getItem(key: string, override?: any): any {\n        if (override) {\n            return override;\n        }\n\n        if (Config.defaultOptions) {\n            return key.split('.').reduce((o, i) => o[i], Config.defaultOptions);\n        }\n    }\n\n    /**\n     * Set an option by key.\n     *\n     * @param   key\n     * @param  value\n     */\n    setItem(key: string, value: any): any {\n        return _.set(this.options, key, value);\n    }\n\n    /**\n     * Set the configurable options.\n     *\n     * @param  options\n     */\n    setOptions(options: any): Config {\n        this.options = _.merge(this.options, options);\n\n        return this;\n    }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Event {\n    /**\n     * Event channels.\n     */\n    static channels: Subject<any>[] = [];\n\n    /**\n     * Get an event listener.\n     *\n     * @param  key\n     */\n    static channel(key: any): Subject<any> {\n        if (typeof Event.channels[key] === 'undefined') {\n            Event.channels[key] = new Subject<any>();\n        }\n\n        return Event.channels[key];\n    }\n\n    /**\n     * Set multiple event channels.\n     *\n     * @param events\n     */\n    setChannels(channels: string[]): void {\n        channels.forEach((channel) => Event.channel(channel));\n    }\n\n    /**\n     * Broadcast an event to a channel.\n     */\n    broadcast(key: string, data = {}): Promise<any> {\n        return Promise.resolve(Event.channel(key).next(data));\n    }\n\n    /**\n     *  Listen on a channel for an event.s\n     *\n     * @param  key\n     */\n    listen(key: string): Observable<any> {\n        return Event.channel(key).asObservable();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../config';\nimport * as localForage from \"localforage\";\n\nexport interface StorageDriver {\n    /**\n     * The database of the storage provider.\n     */\n    db: any;\n\n    /**\n     * Get an item from storage.\n     *\n     * @param   key\n     */\n    get(key: string): Promise<any>;\n\n    /**\n     * Set an item to storage.\n     *\n     * @param  key\n     * @param  value\n     */\n    set(key: string, value: any): Promise<any>;\n\n    /**\n     * Remove an item from storage.\n     *\n     * @param key\n     */\n    remove(key: string): Promise<any>;\n\n    /**\n     * Clear storage.\n     */\n    clear(): Promise<any>;\n}\n\n@Injectable()\nexport class Storage implements StorageDriver {\n    /**\n     * The database of the storage provider.\n     */\n    db: any;\n\n    /**\n     * Create a new instance of the service.\n     *\n     * @param config\n     */\n    constructor(private config: Config) {\n        this.db = localForage.createInstance({\n            name: this.config.get('storage.name')\n        });\n    }\n\n    /**\n     * Get item from local storage.\n     */\n    get(key: string): Promise<any> {\n        return this.db.getItem(key);\n    }\n\n    /**\n     * Set an item to local storage.\n     *\n     * @param  key\n     * @param  value\n     */\n    set(key: string, value: any): Promise<any> {\n        return this.db.setItem(key, value);\n    }\n\n    /**\n     * Remove an item from local storage.\n     *\n     * @param   key\n     */\n    remove(key: string): Promise<any> {\n        return this.db.removeItem(key);\n    }\n\n    /**\n     * Clear local storage.\n     */\n    clear(): Promise<any> {\n        return this.db.clear();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from './storage';\nimport { Config } from './../config';\n\n@Injectable()\nexport class Token {\n    /**\n     * Name of token stored in local storage.\n     */\n    protected _token: string = '_token';\n\n    /**\n     * Constructor.\n     *\n     * @param  config\n     * @param  storage\n     */\n    constructor(\n        public config: Config,\n        private storage: Storage\n    ) { }\n\n    /**\n     * Get the token from local storage.\n     *\n     * @param  tokenName\n     */\n    get(tokenName?: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            tokenName = tokenName || this.config.get('token.name', this._token);\n\n            this.storage.get(tokenName).then(token => {\n                resolve(token);\n            }, err => reject(err));\n        });\n    }\n\n    /**\n     * Store the token in local storage.\n     *\n     * @param  token\n     * @param  tokenName\n     */\n    set(token: string, tokenName?: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            tokenName = tokenName || this.config.get('token.name', this._token);\n\n            if (token) {\n                this.storage.set(tokenName, token).then(() => {\n                    resolve(true);\n                }, () => reject('Error: Could not store token.'));\n            } else {\n                reject('Error: No token provided.');\n            }\n        });\n    }\n\n    /**\n     * Remove token from local storage.\n     *\n     * @param  tokenName\n     */\n    remove(tokenName?: string): boolean {\n        tokenName = tokenName || this.config.get('token.name', this._token);\n\n        this.storage.remove(tokenName);\n\n        return true;\n    }\n\n    /**\n     * Read a token from a response object.\n     *\n     * @param  response\n     */\n    read(response: any = null): string {\n        if (response) {\n            let key = this.config.get('token.readAs');\n\n            return key.split('.').reduce((o: any, i: string) => o[i], response);\n        }\n\n        return null;\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Config } from './../config';\nimport { Event } from './event';\nimport { Token } from './token';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class Http implements OnDestroy {\n    /**\n     * Create a new instance of the service.\n     *\n     * @param  config\n     * @param  event\n     * @param  token\n     */\n    constructor(\n        public config: Config,\n        public event: Event,\n        public token: Token\n    ) {\n        this.setDefaultHeaders();\n        this.eventListeners();\n    }\n\n    /**\n     * Assignable base url for http calls.\n     */\n    baseUrl: string = '';\n\n    /**\n     * Headers to be sent with all http calls.\n     */\n    public headers: HttpHeaders = new HttpHeaders();\n\n    /**\n     * The subsciptions of the service.\n     */\n    subs: any = {};\n\n    /**\n     * On service destroy.\n     */\n    ngOnDestroy(): void {\n        Object.keys(this.subs).forEach(k => this.subs[k].unsubscribe());\n    }\n\n    /**\n     * Build url parameters for requests.\n     *\n     * @param  params\n     */\n    buildParams(params: any): HttpParams {\n        var query_params = new HttpParams();\n\n        if (params) {\n            Object.keys(params).forEach((key: any) => {\n                if (params[key]) query_params.set(key, params[key]);\n            });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Event listeners.\n     */\n    private eventListeners(): void {\n        if (this.event) {\n            let sub = () => this.setDefaultHeaders();\n            this.subs['auth:loggingIn'] = this.event.listen('auth:loggingIn').subscribe(sub);\n            this.subs['auth:loggedOut'] = this.event.listen('auth:loggedOut').subscribe(sub);\n            this.subs['auth:check'] = this.event.listen('auth:check').subscribe(sub);\n        }\n    }\n\n    /**\n     * Get url for http request.\n     *\n     * @param  url\n     */\n    public getUrl(url: string): string {\n        if (url.startsWith('/') || url.startsWith('http')) return url;\n\n        let baseUrl = this.baseUrl || this.config.get('http.baseUrl') || '';\n\n        return (baseUrl) ? baseUrl + '/' + url : url;\n    }\n\n    /**\n     * Set the default headers for http request.\n     */\n    setDefaultHeaders(): void {\n        let configHeaders = (this.config) ? this.config.get('http.headers') : null;\n\n        if (configHeaders) {\n            Object.keys(configHeaders).forEach(key => {\n                this.headers = this.headers.set(key, configHeaders[key]);\n            });\n        }\n\n        this.tokenHeader();\n    }\n\n    /**\n     * Add a token header to the request.\n     */\n    tokenHeader(): Promise<any> {\n        return new Promise((resolve) => {\n            if (this.config && this.config.get('authentication.method.token')) {\n                this.token.get().then(token => {\n                    let scheme = this.config.get('token.scheme');\n                    let value = (scheme) ? `${scheme} ${token}` : token;\n                    this.headers = this.headers.set('Authorization', value);\n                    resolve(token ? true : false);\n                }, () => {\n                    this.headers = this.headers.delete('Authorization');\n                    resolve(false);\n                });\n            }\n        })\n    }\n}\n","/**\n * Model for cache items.\n */\nexport class CacheItemModel {\n    /**\n     * When the cache item expires.\n     */\n    _expires: number;\n\n    /**\n     * The value of the cache item.\n     */\n    _value: any;\n\n    /**\n     * Construcotr.\n     *\n     * @param  item\n     */\n    constructor(item: any) {\n        Object.assign(this, item)\n    }\n\n    /**\n     * Get value accessor parses JSON.\n     */\n    get value(): any {\n        return JSON.parse(this._value);\n    }\n\n    /**\n     * Set the value mutator that stringifies value.\n     *\n     * @param  value\n     */\n    set value(value: any) {\n        this._value = JSON.stringify(value);\n    }\n\n    /**\n     * Get expires accessor.\n     */\n    get expires(): number {\n        return this._expires;\n    }\n\n    /**\n     * Set the expires mutator.\n     *\n     * @param  minutes\n     */\n    set expires(minutes: number) {\n        let expiration = new Date();\n        expiration.setMinutes(expiration.getMinutes() + minutes);\n        this._expires = expiration.getTime();\n    }\n\n    /**\n     * Check if cached item is expired.\n     */\n    isExpired(): boolean {\n        return this.expires <= new Date().getTime();\n    }\n}\n","import * as moment from 'moment';\n\nexport class Model {\n    /**\n     * Create a new instance of the mdoel.\n     *\n     * @param  attributes\n     */\n    constructor(attributes?: any) {\n        if (typeof attributes === 'string') {\n            attributes = JSON.parse(attributes);\n        }\n\n        Object.assign(this, attributes);\n    }\n\n    /**\n     * Moment JS\n     *\n     * @return moment\n     */\n    moment = moment;\n}\n","export class PolicyModel {\n    /**\n     * Name of the policy.\n     */\n    name: string;\n\n    /**\n     * The objects of the defined policy.\n     */\n    objects: any[] = [];\n\n    /**\n     * Constructor.\n     *\n     * @param  policy\n     */\n    constructor(policy: any) {\n        Object.assign(this, policy);\n    }\n}\n","import { Authorization } from '../services/authorization';\n\nexport class UserModel {\n    /**\n     * Create a new instance of the model.\n     *\n     * @param authorization\n     * @param user\n     */\n    constructor(\n        private authorization: Authorization,\n        public user: object\n    ) {\n        Object.assign(this, user);\n    }\n\n    /**\n     * Check if user can perform action based on a policy.\n     *\n     * @param  key\n     * @param  value\n     */\n    can(key: string, value: any): boolean {\n        return this.authorization.checkPolicy(key, value);\n    }\n\n    /**\n     * Check if user cannot perform action based on a policy.\n     *\n     * @param  key\n     * @param  value\n     */\n    cannot(key: string, value: any): boolean {\n        return !this.authorization.checkPolicy(key, value);\n    }\n\n    /**\n     * Allow a user to perform action based on a policy.\n     *\n     * @param  policyName\n     * @param  object\n     * @param  allowed\n     */\n    allow(policyName: string, object: any, allowed: Function | boolean): UserModel {\n        if (typeof allowed === 'function' && allowed()) {\n            this.authorization.addPolicy(policyName, object);\n        } else if (typeof allowed === 'boolean' && allowed) {\n            this.authorization.addPolicy(policyName, object);\n        } else {\n            this.authorization.removePolicy(policyName, object);\n        }\n\n        return this;\n    }\n\n    /**\n     * Don't allow a user to perform action based on a policy.\n     *\n     * @param  policyName\n     * @param  object\n     * @param  allowed\n     */\n    disallow(policyName: string, object: any): UserModel {\n        this.authorization.removePolicy(policyName, object);\n\n        return this;\n    }\n\n    /**\n     * Identify a user with a role.\n     *\n     * @param role\n     */\n    identify(role: string): UserModel {\n        this.authorization.addPolicy('roles', role);\n\n        return this;\n    }\n\n    /**\n     * Check if a user is identified as a role.\n     *\n     * @param  role\n     */\n    is(role: string): boolean {\n        return this.authorization.checkPolicy('roles', role);\n    }\n\n    /**\n     * Check if a user is not identified with a role.\n     *\n     * @param  role\n     */\n    isNot(role: string): boolean {\n        return !this.authorization.checkPolicy('roles', role);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { PolicyModel } from './../models/index';\n\n@Injectable()\nexport class Authorization {\n    /**\n     * Active Policies\n     */\n    policies: PolicyModel[] = [];\n\n    /**\n     * Constructor.\n     */\n    constructor() { }\n\n    /**\n     *  Add a policy to the service.\n     *\n     * @param  key\n     * @param  value\n     */\n    addPolicy(key: string, value?: any): boolean {\n        if (this.policies.findIndex(policy => policy.name == key) < 0) {\n            let policy = new PolicyModel({ name: key });\n\n            if (value) policy.objects.push(value);\n\n            this.policies.push(policy);\n\n            return true;\n        } else {\n            let index = this.policies.findIndex(policy => policy.name == key);\n\n            if (value && !this.policies[index].objects[value]) {\n                this.policies[index].objects.push(value);\n\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    /**\n     * Check the given policy.\n     *\n     * @param  name\n     * @param  value\n     */\n    checkPolicy(key: string, value: any = null): boolean {\n        let check = false;\n        let policy = this.policies.find(policy => policy.name === key);\n\n        if (policy) {\n            check = true;\n        }\n\n        if (policy && ((value && policy.objects.indexOf(value) >= 0) ||\n            (!value && !policy.objects.length))) {\n            check = true;\n        } else {\n            check = false;\n        }\n\n        return check;\n    }\n\n    /**\n     * Clear all the policies on the service.\n     */\n    clearPolicies(): void {\n        this.policies = [];\n    }\n\n    /**\n     *  Remove a policy that has already been defined.\n     *\n     * @param  key\n     * @param  value\n     */\n    removePolicy(key: string, value: any): boolean {\n        let policy = this.policies.find(policy => policy.name === key);\n\n        if (policy && policy.objects.indexOf(value) >= 0) {\n            let index = this.policies.findIndex(policy => policy.name === name);\n            let objectIndexs: any[] = [];\n\n            policy.objects.forEach((o, i) => {\n                if (o == value) {\n                    objectIndexs.push(i);\n                }\n            });\n\n            objectIndexs.forEach(index => delete policy.objects[index]);\n\n            this.policies[index] = policy;\n\n            return true;\n        }\n\n        return false;\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Http } from './http';\nimport { Authorization } from './authorization';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { UserModel } from '../models/index';\nimport { Config } from './../config';\nimport { Token } from './token';\nimport { Event } from './event';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class Authentication implements OnDestroy {\n    /**\n     * Create a new instance of the service.\n     *\n     * @param  authorization\n     * @param  config\n     * @param  event\n     * @param  http\n     * @param  httpService\n     * @param  token\n     */\n    constructor(\n        public authorization: Authorization,\n        public config: Config,\n        public event: Event,\n        public http: HttpClient,\n        public httpService: Http,\n        public token: Token\n    ) {\n        this.event.setChannels(this.channels);\n        this.eventListeners();\n    }\n\n    /**\n     * Authorized user.\n     */\n    authUser: any = null;\n\n    /**\n     * State of the user authentication.\n     */\n    authenticated: boolean;\n\n    /**\n     * Event channels.\n     */\n    protected channels: string[] = [\n        'auth:login',\n        'auth:logginIn',\n        'auth:loggedIn',\n        'auth:logout',\n        'auth:loggingOut',\n        'auth:loggedOut',\n        'auth:required',\n        'auth:check',\n        'auth:guarded',\n        'auth:registered',\n    ];\n\n    /**\n     * The redirect data on the service.\n     */\n    private redirect: any = null\n\n    /**\n     * The subsciptions of the service.\n     */\n    subs: any = {};\n\n    /**\n     * The timeouts of the component.\n     */\n    timeouts: any = {};\n\n    /**\n     * On service destroy.\n     */\n    ngOnDestroy(): void {\n        Object.keys(this.subs).forEach(k => this.subs[k].unsubscribe());\n        Object.keys(this.timeouts).forEach(k => clearTimeout(this.timeouts[k]));\n    }\n\n    /**\n     * Check if user is logged in.\n     *\n     * @param  force\n     */\n    check(force: boolean = false): Observable<boolean> {\n        let endpoint = this.config.get('authentication.endpoints.check');\n\n        this.event.broadcast('auth:check');\n\n        return new Observable(observer => {\n            if (this.authenticated === false) {\n                this.checkResolve(observer, false);\n            } else if (this.authenticated === true && !force) {\n                this.event.broadcast('auth:loggedIn', this.user());\n                this.checkResolve(observer, true);\n            } else {\n                this.httpService.tokenHeader().then((token) => {\n                    if (token) {\n                        this.getUser(endpoint).then((res) => {\n                            this.setAuthenticated(true);\n                            this.setUser(res.data || res);\n                            this.event.broadcast('auth:loggedIn', this.user());\n                            this.checkResolve(observer, true);\n                        }, () => {\n                            this.setAuthenticated(false);\n                            this.event.broadcast('auth:required', true);\n                            this.checkResolve(observer, false);\n                        });\n                    } else {\n                        this.setAuthenticated(false);\n                        this.checkResolve(observer, false);\n                    }\n                }, err => observer.error(err));\n            }\n        });\n    }\n\n    /**\n     * Resolve the auth check.\n     *\n     * @param observer\n     * @param authenticated\n     */\n    checkResolve(observer: Observer<boolean>, authenticated: boolean): void {\n        this.event.broadcast('auth:check', authenticated).then(() => {\n            this.timeouts['checkResolve'] = setTimeout(() => {\n                observer.next(authenticated);\n            }, 100);\n        });\n    }\n\n    /**\n     * The service event listeners.\n     */\n    eventListeners(): void {\n        this.subs['auth:loggedIn'] = this.event.listen('auth:loggedIn').subscribe((user) => {\n            this.setAuthenticated(true);\n            this.setUser(user);\n        });\n    }\n\n    /**\n     * Send a forgot password request.\n     *\n     * @param  credentials\n     * @param  endpoint\n     * @param  headers\n     */\n    forgotPassword(data: any, endpoint: string = '', headers = {}): Promise<any> {\n        endpoint = this.config.get(\n            'authentication.endpoints.forgotPassword', endpoint\n        );\n\n        return new Promise((resolve, reject) => {\n            return this.http.post(endpoint, data, headers).toPromise()\n                .then(res => resolve(res), error => reject(error));\n        });\n    }\n\n    /**\n     * Returns the redirect data.\n     */\n    getRedirect(): any {\n        return this.redirect;\n    }\n\n    /**\n     * Get the authentication token.\n     */\n    getToken(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.token.get().then(token => resolve(token), err => reject(err));\n        });\n    }\n\n    /**\n     * Get the current authenticated user.\n     *\n     * @param  endpoint\n     */\n    getUser(endpoint: string = ''): Promise<any> {\n        endpoint = this.config.get('authentication.endpoints.getUser', endpoint);\n\n        return this.http.get(endpoint).toPromise();\n    }\n\n    /**\n     * Get the value authenticated value.\n     */\n    getAuthenticated(): boolean {\n        return this.authenticated;\n    }\n\n    /**\n     * Set if authenticated value.\n     */\n    setAuthenticated(value: boolean): boolean {\n        return this.authenticated = value;\n    }\n\n    /**\n     * Send a login request.\n     *\n     * @param  credentials\n     * @param  endpoint\n     * @param  headers\n     */\n    login(credentials: any, endpoint: string = '', headers = {}): Promise<any> {\n        endpoint = this.config.get('authentication.endpoints.login', endpoint);\n\n        return new Promise((resolve, reject) => {\n            this.http.post(endpoint, credentials, headers).toPromise()\n                .then(res => {\n                    this.onLogin(res).then(() => resolve(res), error => reject(error));\n                }, error => reject(error));\n        });\n    }\n\n    /**\n     * Send a request to log the authenticated user out.\n     */\n    logout(endpoint: string = '', headers = {}): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.event.broadcast('auth:loggingOut').then(() => {\n                endpoint = this.config.get('authentication.endpoints.logout', endpoint);\n\n                if (endpoint) {\n                    this.http.post(endpoint, {}, headers).toPromise().then(res => {\n                        this.onLogout();\n                        resolve(res)\n                    }, error => reject(error));\n                } else {\n                    this.onLogout();\n                    resolve();\n                }\n            });\n        });\n    }\n\n    /**\n     * Actions to perform on login.\n     *\n     * @param  res\n     */\n    onLogin(res: object): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.storeToken(res).then(() => {\n                this.event.broadcast('auth:loggingIn', res).then(() => {\n                    this.resolveUser().then(() => resolve(), err => reject(err));\n                }, err => reject(err));\n            }, err => reject(err));\n        });\n    }\n\n    /**\n     * Actions to perform on logout.\n     */\n    onLogout(): void {\n        this.unauthenticate();\n        this.event.broadcast('auth:loggedOut');\n    }\n\n    /**\n     * Returns and clears the redirect data.\n     */\n    pullRedirect(): any {\n        let redirect = this.redirect;\n\n        this.redirect = null;\n\n        return redirect;\n    }\n\n    /**\n     * Send a register request.\n     *\n     * @param  data\n     * @param   endpoint\n     * @param  headers\n     * @param postRegisterLogin\n     */\n    register(data: object, endpoint: string = '', headers = {}, postRegisterLogin: boolean = false): Promise<any> {\n        endpoint = this.config.get('authentication.endpoints.register', endpoint);\n        return new Promise((resolve, reject) => {\n            this.http.post(endpoint, data, headers).toPromise().then(res => {\n                if (postRegisterLogin) {\n                    this.onLogin(res).then(() => {\n                        resolve(res);\n\n                        this.event.broadcast('auth:registered', res);\n                    }, error => reject(error));\n                } else {\n                    this.event.broadcast('auth:registered', res);\n                }\n            }, error => reject(error));;\n        });\n    }\n\n    /**\n     * Send a reset password request.\n     *\n     * @param   credentials\n     * @param   endpoint\n     * @param  headers\n     */\n    resetPassword(data: any, endpoint: string = '', headers = {}): Promise<any> {\n        endpoint = this.config.get(\n            'authentication.endpoints.resetPassword', endpoint\n        );\n\n        return new Promise((resolve, reject) => {\n            this.http.post(endpoint, data, headers).toPromise().then(res => {\n                this.onLogin(res).then(() => resolve(res))\n            }, error => reject(error));\n        });\n    }\n\n    /**\n     * Resolve the authenticated user.\n     */\n    resolveUser(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.timeouts['resolveUser'] = setTimeout(() => {\n                this.getUser().then((user) => {\n                    this.setAuthenticated(true);\n\n                    this.setUser(user.data || user).then((user) => {\n                        this.event.broadcast('auth:loggedIn', user);\n\n                        resolve();\n                    }, error => reject(error));\n                }, error => reject(error));\n            }, 250);\n        });\n    }\n\n    /**\n     * Set the redirect data.\n     */\n    setRedirect(value: any): any {\n        return this.redirect = value;\n    }\n\n    /**\n     * Set the current authenticated user.\n     *\n     * @param  user\n     */\n    setUser(user: object): Promise<any> {\n        if (user) {\n            user = new UserModel(this.authorization, user);\n        }\n\n        return new Promise((resolve) => resolve(this.authUser = user));\n    }\n\n    /**\n     * Store aut token and broadcast an event.\n     *\n     * @param  res\n     */\n    storeToken(res: any): Promise<any> {\n        return new Promise((resolve) => {\n            this.token.set(this.token.read(res)).then(() => {\n                resolve(res);\n            }, error => console.error(error));\n        });\n    }\n\n    /**\n     * Unauthenticate the current user.\n     */\n    unauthenticate(): void {\n        this.token.remove();\n        this.setAuthenticated(false);\n        this.setUser(null);\n        this.authorization.clearPolicies();\n    }\n\n    /**\n     * Get the current authenticated user.\n     */\n    user = (): any => this.authUser;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Authentication } from './authentication';\nimport { Authorization } from './authorization';\nimport { Injectable } from '@angular/core';\nimport { Config } from './../config';\nimport { HttpClient } from '@angular/common/http';\nimport { Http } from './http';\nimport { Token } from './token';\nimport { Event } from './event';\n\n@Injectable()\nexport class SocialAuthentication extends Authentication {\n    /**\n     * Constructor.\n     */\n    constructor(\n        public authorization: Authorization,\n        public config: Config,\n        public event: Event,\n        public http: HttpClient,\n        public httpService: Http,\n        public token: Token\n    ) {\n        super(authorization, config, event, http, httpService, token);\n\n        //\n    }\n\n    /**\n     * Login with a social provider.\n     */\n    // login(provider: string, options?: any): Promise<any> {\n    //     return new Promise(() => {\n    //         // this.handleLoginSuccess(res).then((res) => {\n    //         //     this.onLogin(res).then(() => resolve(res));\n    //         // }, (error) => reject(this.handleLoginError(error)))\n    //     });\n    // }\n\n    /**\n     * Handle succesful Facebook login.\n     *\n     * @param  res\n     */\n    handleLoginSuccess(res: object): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.storeSocialCredentials(res);\n\n            this.http.post(\n                this.config.get('authentication.endpoints.socialAuth'),\n                res\n            ).subscribe(res => {\n                this.onLogin(res).then(() => {\n                    resolve(res);\n                }, error => reject(error));\n            }, error => reject(error));\n        });\n    }\n\n    /**\n     * Handle errors on facebook login.\n     *\n     * @param  error\n     */\n    handleLoginError = (error: object) => console.log(error);\n\n    /**\n     * Store social auth crednetials.\n     *\n     * @param  res\n     */\n    storeSocialCredentials(res: any): void {\n        if (res.network == 'facebook') {\n            this.token.set(\n                res.authResponse.accessToken,\n                'facebook_access_token'\n            );\n        }\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { CacheItemModel } from '../models/index';\nimport { Storage } from './storage';\nimport { Config } from './../config';\nimport { Event } from './event';\n\ninterface CacheInterface {\n    [key: string]: CacheItemModel;\n}\n\n@Injectable()\nexport class Cache implements OnDestroy {\n    /**\n     * The name of the cache instance.\n     */\n    cacheName: string = 'ngkit_cache';\n\n    /**\n     * In memory collection of cache.\n     */\n    private _cache: CacheInterface = {};\n\n    /**\n     * Constructor.\n     */\n    constructor(\n        private config: Config,\n        private event: Event,\n        private storage: Storage\n    ) {\n        this.retrieveCache();\n\n        this.subs['auth:loggedOut'] = this.event.listen('auth:loggedOut')\n            .subscribe(() => {\n                this._cache = {};\n                this.clear();\n            });\n    }\n\n    /**\n     * The subsciptions of the service.\n     */\n    subs: any = {};\n\n    /**\n     * On service destroy.\n     */\n    ngOnDestroy(): void {\n        Object.keys(this.subs).forEach(k => this.subs[k].unsubscribe());\n    }\n\n    /**\n     * Retrieve the stored cache.\n     */\n    protected retrieveCache(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.storage.get(this.cacheName).then(cache => {\n                if (cache) {\n                    Object.keys(cache).forEach((item) => {\n                        cache[item] = new CacheItemModel(cache[item])\n                    });\n\n                    this.cache = cache;\n                } else {\n                    this.cache = this.store();\n                }\n\n                resolve(this.cache);\n            }, err => reject(err));\n        });\n    }\n\n    /**\n     * Save the cache to storage.\n     *\n     * @param  key\n     * @param  value\n     */\n    store(): any {\n        this.storage.set(this.cacheName, this._cache);\n\n        return this._cache;\n    }\n\n    /**\n     * Accessor to the in memeory cache.\n     */\n    get cache(): any {\n        return this._cache;\n    }\n\n    /**\n     * Mutator to the in memeory cache.\n     *\n     */\n    set cache(value) {\n        this._cache = value;\n    }\n\n    /**\n     * Get an item from cache.\n     *\n     * @param   key\n     * @param  defautValue\n     */\n    get(key: string, defautValue: any = null): any {\n        if (this.cache[key] && !this.cache[key].isExpired()) {\n            return this.cache[key].value;\n        } else if (defautValue) {\n            return defautValue;\n        } else {\n            this.remove(key);\n\n            return null;\n        }\n    }\n\n    /**\n     * Set an item to cache.\n     *\n     * @param  key\n     * @param  value\n     * @param  expires\n     */\n    set(\n        key: string,\n        value: any,\n        expires: number = this.config.get('cache.expires')\n    ): void {\n        let cacheItem = new CacheItemModel({ value: value, expires: expires });\n\n        this._cache[key] = cacheItem;\n\n        this.store();\n    }\n\n    /**\n     * Remove an item from cache.\n     *\n     * @param key\n     */\n    remove(key: string): void {\n        delete this.cache[key];\n        this.store();\n    }\n\n    /**\n     * Clear the cache.\n     */\n    clear(): void {\n        this.storage.remove(this.cacheName);\n    }\n\n    /**\n     * Get an item from cache and remove it.\n     *\n     * @param  key\n     */\n    pull(key: string): any {\n        let value = this.get(key);\n        this.remove(key);\n\n        return value;\n    }\n\n    /**\n     * Check if cache has an item.\n     *\n     * @param  key\n     */\n    has(key: string): boolean {\n        return this.get(key) !== null ? true : false;\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot\n} from '@angular/router';\nimport { Authentication } from './../services/authentication';\nimport { Event } from './../services/event';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild, OnDestroy {\n    /**\n     * Create a new instance.\n     *\n     * @param  auth\n     * @param  event\n     */\n    constructor(\n        public auth: Authentication,\n        public event: Event\n    ) { }\n\n    /**\n     * The subsciptions of the service.\n     */\n    subs: any = {};\n\n    /**\n     * On service destroy.\n     */\n    ngOnDestroy(): void {\n        Object.keys(this.subs).forEach(k => this.subs[k].unsubscribe());\n    }\n\n    /**\n     * Determine if the user can activate a route.\n     *\n     * @param route\n     * @param state\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        return this.guard(route, state);\n    }\n\n    /**\n     * Determine if the user can activate children of a route.\n     *\n     * @param  route\n     * @param  state     *\n     */\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        return this.guard(route, state);\n    }\n\n    /**\n     * The method to apply to guard.\n     *\n     * @param route\n     * @param state\n     */\n    guard(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        route;\n\n        return new Promise((resolve) => {\n            if (this.auth.user()) {\n                resolve(true);\n            } else {\n                this.subs['auth:check'] = this.auth.check().subscribe(check => {\n                    if (check) {\n                        resolve(true);\n                    } else {\n                        this.event.broadcast('auth:modal');\n                        this.auth.setRedirect(state.url);\n                        resolve(false);\n                    }\n                });\n            }\n        });\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { CanActivate, CanActivateChild } from '@angular/router';\nimport { Authentication } from './../services/authentication';\nimport { Event } from './../services/event';\n\n@Injectable()\nexport class AuthResolveGuard implements CanActivate, CanActivateChild, OnDestroy {\n    /**\n     * Create a new instance.\n     *\n     * @param  auth\n     * @param  event\n     */\n    constructor(\n        public auth: Authentication,\n        public event: Event\n    ) { }\n\n    /**\n     * The subsciptions of the service.\n     */\n    subs: any = {};\n\n    /**\n     * On service destroy.\n     */\n    ngOnDestroy(): void {\n        Object.keys(this.subs).forEach(k => this.subs[k].unsubscribe());\n    }\n\n    /**\n     * Determine if the user can activate a route.\n     */\n    canActivate(): Promise<boolean> {\n        return this.guard();\n    }\n\n    /**\n     * Determine if the user can activate children of a route.\n     */\n    canActivateChild(): Promise<boolean> {\n        return this.guard();\n    }\n\n    /**\n     * The method to apply to guard.\n     */\n    guard(): Promise<boolean> {\n        return new Promise((resolve) => {\n            if (this.auth.user()) {\n                resolve(true);\n            } else {\n                this.subs['auth:check'] = this.auth.check().subscribe(() => {\n                    resolve(true);\n                });\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from './http';\nimport {\n    HttpEvent, HttpHandler, HttpInterceptor as Interceptor, HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpInterceptor implements Interceptor {\n    /**\n     * Create a new instance of the interceptor.\n     *\n     * @param  http\n     */\n    constructor(\n        public http: Http\n    ) { }\n\n    /**\n     * Intercept the http request.\n     *\n     * @param  req\n     * @param  next\n     */\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        req = req.clone({\n            headers: this.http.headers,\n            url: this.http.getUrl(req.url)\n        });\n\n        return next.handle(req);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from './http';\nimport { Event } from './event';\nimport {\n    HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    /**\n     * Create a new instance of the interceptor.\n     *\n     * @param  http\n     * @param  event\n     */\n    constructor(\n        public http: Http,\n        public event: Event,\n    ) { }\n\n    /**\n     * Intercept the http request.\n     *\n     * @param  req\n     * @param  next\n     */\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(tap(() => { }, (error: any) => {\n            if (error instanceof HttpErrorResponse) {\n                if (error.status === 401) {\n                    this.event.broadcast('auth:required', error);\n                }\n            }\n        }));\n    }\n}\n","import { Config } from './config';\nimport {\n    Authentication, Authorization, Event, Http, SocialAuthentication,\n    Storage, Token, Cache\n} from './services/index';\nimport { AuthGuard, AuthResolveGuard } from './guards/index';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpInterceptor } from './services/http-interceptor';\nimport { AuthInterceptor } from './services/http-auth-interceptor';\n\n/**\n * ngKit Services.\n */\nexport const NGKIT_PROVIDERS: any[] = [\n    Authentication,\n    AuthGuard,\n    AuthResolveGuard,\n    SocialAuthentication,\n    Authorization,\n    Config,\n    Storage,\n    Cache,\n    Event,\n    Http,\n    Token,\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: HttpInterceptor,\n        multi: true\n    },\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n    }\n];\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NGKIT_PROVIDERS } from './providers';\n\n@NgModule({\n    imports: [HttpClientModule],\n    providers: [\n        ...NGKIT_PROVIDERS,\n    ]\n})\nexport class ngKitModule {\n    /**\n     * ngKit module initializer.\n     *\n     * @param  options\n     */\n    static forRoot(options: any): ModuleWithProviders {\n        return {\n            ngModule: ngKitModule,\n            providers: [\n                { provide: 'ngKitOptions', useValue: options },\n            ]\n        }\n    }\n}\n"],"names":["_.set","_.merge","Injectable","Inject","Subject","localForage.createInstance","HttpHeaders","HttpParams","http","Observable","HttpClient","tslib_1.__extends","tap","HttpErrorResponse","HTTP_INTERCEPTORS","NgModule","HttpClientModule"],"mappings":"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"}
